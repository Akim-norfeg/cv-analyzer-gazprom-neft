import numpy as np

# Задаем список компетенций (в том же порядке, что использовался при обучении модели)
competency_list = [
    "Определения, история развития и главные тренды ИИ",
    "Процесс, стадии и методологии разработки решений на основе ИИ (Docker, Linux/Bash, Git)",
    "Статистические методы и первичный анализ данных",
    "Промпт-инжиниринг",
    "Инструменты CitizenDS",
    "Оценка качества работы методов ИИ",
    "Языки программирования и библиотеки (Python, C++)",
    "Этика ИИ",
    "Безопасность ИИ",
    "Цифровые двойники",
    "Методы машинного обучения",
    "Методы оптимизации",
    "Информационный поиск",
    "Рекомендательные системы",
    "Анализ изображений и видео",
    "Анализ естественного языка",
    "Основы глубокого обучения",
    "Глубокое обучение для анализа и генерации изображений, видео",
    "Глубокое обучение для анализа и генерации естественного языка",
    "Обучение с подкреплением и глубокое обучение с подкреплением",
    "Гибридные модели и PIML",
    "Анализ геоданных",
    "Массово параллельные вычисления для ускорения машинного обучения (GPU)",
    "Работа с распределенной кластерной системой",
    "Машинное обучение на больших данных",
    "Потоковая обработка данных (data streaming, event processing)",
    "Графовые нейросети",
    "SQL базы данных (GreenPlum, Postgres, Oracle)",
    "NoSQL базы данных (Cassandra, MongoDB, ElasticSearch, Neo4j, Hbase)",
    "Массово параллельная обработка и анализ данных",
    "Hadoop, SPARK, Hive",
    "Шины данных (Kafka)",
    "Качество и предобработка данных, подходы и инструменты",
    "Графы знаний и онтологии"
]

profession_names = [
    "Аналитик данных",
    "Инженер данных",
    "Технический аналитик в ИИ",
    "Менеджер в ИИ"
]

# Матрица из изображения (34 строки по 4 профессии)
profession_matrix = np.array([
    [1, 1, 1, 1],
    [2, 2, 1, 1],
    [2, 1, 1, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [2, 1, 1, 1],
    [2, 1, 1, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [2, 2, 1, 1],
    [2, 1, 0, 0],
    [1, 1, 0, 0],
    [1, 0, 1, 0],
    [2, 1, 1, 1],
    [2, 1, 1, 1],
    [2, 2, 1, 1],
    [2, 2, 1, 1],
    [2, 2, 1, 1],
    [1, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 1, 0, 0],
    [1, 2, 0, 0],
    [1, 2, 0, 0],
    [0, 2, 0, 0],
    [0, 0, 0, 0],
    [1, 3, 1, 1],
    [1, 3, 1, 1],
    [1, 2, 0, 0],
    [1, 2, 0, 0],
    [0, 0, 0, 0],
    [2, 3, 1, 1],
    [0, 0, 0, 0],
])

recommendations = {
    "Определения, история развития и главные тренды ИИ": ["https://ru.wikipedia.org/wiki/Искусственный_интеллект"],
    "Процесс, стадии и методологии разработки решений на основе ИИ (Docker, Linux/Bash, Git)": ["https://ru.wikipedia.org/wiki/DevOps"],
    "Статистические методы и первичный анализ данных": ["https://ru.wikipedia.org/wiki/Статистический_анализ"],
    "Промпт-инжиниринг": ["https://en.wikipedia.org/wiki/Prompt_engineering"],
    "Инструменты CitizenDS": ["https://github.com/CitizenDS/CDS-Docs"],
    "Оценка качества работы методов ИИ": ["https://en.wikipedia.org/wiki/Evaluation_of_machine_learning_algorithms"],
    "Языки программирования и библиотеки (Python, C++)": ["https://www.python.org/"],
    "Этика ИИ": ["https://ru.wikipedia.org/wiki/Этика_искусственного_интеллекта"],
    "Безопасность ИИ": ["https://ru.wikipedia.org/wiki/Безопасность_искусственного_интеллекта"],
    "Цифровые двойники": ["https://ru.wikipedia.org/wiki/Цифровой_двойник"],
    "Методы машинного обучения": ["https://ru.wikipedia.org/wiki/Машинное_обучение"],
    "Методы оптимизации": ["https://ru.wikipedia.org/wiki/Оптимизация_(математический_анализ)"],
    "Информационный поиск": ["https://ru.wikipedia.org/wiki/Информационный_поиск"],
    "Рекомендательные системы": ["https://ru.wikipedia.org/wiki/Рекомендательная_система"],
    "Анализ изображений и видео": ["https://ru.wikipedia.org/wiki/Компьютерное_зрение"],
    "Анализ естественного языка": ["https://ru.wikipedia.org/wiki/Обработка_естественного_языка"],
    "Основы глубокого обучения": ["https://ru.wikipedia.org/wiki/Глубокое_обучение"],
    "Глубокое обучение для анализа и генерации изображений, видео": ["https://ru.wikipedia.org/wiki/Глубокие_конволюционные_нейронные_сети"],
    "Глубокое обучение для анализа и генерации естественного языка": ["https://ru.wikipedia.org/wiki/Нейронные_сети_для_обработки_языка"],
    "Обучение с подкреплением и глубокое обучение с подкреплением": ["https://ru.wikipedia.org/wiki/Обучение_с_подкреплением"],
    "Гибридные модели и PIML": ["https://en.wikipedia.org/wiki/Physics-informed_machine_learning"],
    "Анализ геоданных": ["https://ru.wikipedia.org/wiki/Геоинформационный_анализ"],
    "Массово параллельные вычисления для ускорения машинного обучения (GPU)": ["https://ru.wikipedia.org/wiki/GPU"],
    "Работа с распределенной кластерной системой": ["https://ru.wikipedia.org/wiki/Распределенная_вычислительная_система"],
    "Машинное обучение на больших данных": ["https://en.wikipedia.org/wiki/Big_data"],
    "Потоковая обработка данных (data streaming, event processing)": ["https://ru.wikipedia.org/wiki/Потоковая_обработка_данных"],
    "Графовые нейросети": ["https://ru.wikipedia.org/wiki/Графовые_нейронные_сети"],
    "SQL базы данных (GreenPlum, Postgres, Oracle)": ["https://ru.wikipedia.org/wiki/PostgreSQL"],
    "NoSQL базы данных (Cassandra, MongoDB, ElasticSearch, Neo4j, Hbase)": ["https://ru.wikipedia.org/wiki/NoSQL"],
    "Массово параллельная обработка и анализ данных": ["https://ru.wikipedia.org/wiki/Массово-параллельные_вычисления"],
    "Hadoop, SPARK, Hive": ["https://ru.wikipedia.org/wiki/Apache_Hadoop"],
    "Шины данных (Kafka)": ["https://ru.wikipedia.org/wiki/Apache_Kafka"],
    "Качество и предобработка данных, подходы и инструменты": ["https://ru.wikipedia.org/wiki/Подготовка_данных"],
    "Графы знаний и онтологии": ["https://ru.wikipedia.org/wiki/Онтология_(информатика)"]
}